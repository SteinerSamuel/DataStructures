package sorting;

public class InsertionSort {
    /*Function to sort array using insertion sort*/
    void sort(int arr[])
    {
        int n = arr.length;
        for (int i=1; i<n; ++i)
        {
            int key = arr[i];
            int j = i-1;

            /* Move elements of arr[0..i-1], that are
               greater than key, to one position ahead
               of their current position */
            while (j>=0 && arr[j] > key)
            {
                arr[j+1] = arr[j];
                j = j-1;
            }
            arr[j+1] = key;
        }
    }

    /* A utility function to print array of size n*/
    static void printArray(int arr[])
    {
        int n = arr.length;
        for (int i=0; i<n; ++i)
            System.out.print(arr[i] + " ");

        System.out.println();
    }

    // Driver method
    public static void main(String args[])
    {
        int arr[] = {251,80,241,328,55,84,375,302,1,389,17,442,390,306,12,384,287,303,32,175,301,351,292,316,428,281,425,443,371,439,229,397,1,325,403,55,452,331,10,108,396,82,99,258,318,80,412,191,350,228,
                274,144,54,8,380,99,158,155,94,497,294,87,53,318,83,499,370,273,490,19,76,121,418,56,188,326,349,492,52,375,3,400,332,364,275,44,409,55,398,116,187,439,453,367,51,141,215,466,174,177,
                250,384,105,461,96,189,406,249,170,74,44,105,32,246,216,100,86,151,184,363,104,165,312,115,213,336,275,173,175,497,88,474,459,390,323,291,326,379,499,339,438,486,333,320,382,132,27,468,238,81,
                356,128,207,357,438,96,98,145,454,114,205,2,126,166,97,186,84,59,57,291,358,60,428,165,467,341,37,120,314,265,148,63,87,353,449,70,423,22,470,378,172,301,246,279,450,468,169,231,388,370,
                379,21,284,348,80,225,38,147,465,363,52,125,483,392,207,479,232,210,141,173,335,239,16,170,338,497,151,16,263,253,292,456,188,237,151,411,483,173,225,188,58,176,409,9,440,357,28,286,314,354,
                379,321,117,477,336,172,321,175,85,270,481,60,224,484,126,190,72,125,284,214,361,300,336,389,481,110,145,208,43,428,329,238,333,166,299,251,1,412,267,59,424,458,313,257,404,319,380,166,56,374,
                488,418,6,376,219,432,109,434,329,151,156,252,190,118,160,108,305,386,114,381,300,383,237,495,463,91,335,208,9,335,250,302,198,292,227,323,399,58,71,482,261,81,87,344,137,133,154,195,388,28,
                157,472,111,236,414,263,138,207,178,480,339,365,298,229,430,444,97,30,463,39,253,319,96,251,379,440,138,96,416,111,347,119,355,32,366,461,425,449,134,103,44,462,368,270,188,203,77,167,152,25,
                213,287,354,255,347,164,341,409,205,431,143,100,258,46,423,198,223,360,81,213,284,369,195,227,14,208,136,252,290,303,215,435,191,33,494,284,273,472,440,7,374,186,310,3,258,442,134,29,384,79,
                462,160,495,140,340,74,51,52,75,476,462,395,75,201,447,2,145,9,426,491,134,417,468,48,337,6,55,258,404,254,491,155,172,368,360,73,294,176,296,182,399,396,88,400,283,270,27,402,231,29};

        InsertionSort ob = new InsertionSort();
        ob.sort(arr);

        printArray(arr);
    }
}
